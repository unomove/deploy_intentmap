<launch>
  <arg name="basedir" value="/home/unomove/deploy_intentmap/roslaunch" />
  <rosparam command="load" file="$(arg basedir)/image_to_gridmap_demo.yaml" />

  
  <param name="robot_description" command="$(find xacro)/xacro $(arg basedir)/spot.urdf.xacro" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  
  <!-- Launch the grid map image to grid map demo node. -->
  <node pkg="grid_map_demos" type="image_to_gridmap_demo" name="image_to_gridmap_demo" output="screen" />

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" >
    <rosparam file="$(arg basedir)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(arg basedir)/inet_global_costmap_params.yaml" command="load"/>

    <param name="base_global_planner" value="global_planner/GlobalPlanner" />
    <param name="planner_frequency" value="1.0" />
    <param name="planner_patience" value="5.0" />
  </node>

  <!-- In order to use robot localization, one should remove all the tfs related to odom and map, odom and baselink-->
  <!-- Filter raw gyro, accel and mag data into a usable orientation -->
  <node name="imu_filter" pkg="imu_filter_madgwick" type="imu_filter_node" >
    <rosparam command="load" file="$(arg basedir)/imu_calibration.yaml" />
    <param name="orientation_stddev" value="0.001" />
    <param name="gain" value="0.01" />
    <param name="zeta" value="0.001" />
    <param name="publish_tf" value="false" />
    <remap from="imu/data_raw" to="/mavros/imu/data_raw" />
    <remap from="imu/mag" to="/mavros/imu/mag" />
  </node>
  <!-- Local frame localization 
  <node name="ekf_local_odom" pkg="robot_localization" type="ekf_localization_node" >
    <rosparam command="load" file="$(arg basedir)/ekf_local.yaml" />
    <remap from="odometry/filtered" to="odometry/local" />
  </node>-->

  <!-- Global Use-->
    <!-- Global frame localization -->
  <node name="ekf_global_odom" pkg="robot_localization" type="ekf_localization_node" >
    <rosparam command="load" file="$(arg basedir)/ekf_global.yaml" />

    <!-- Publications -->
    <remap from="odometry/filtered" to="odometry/global" />
  </node>

  <!-- Integrating GPS, no need for current version -->
  <node name="navsat_transform_node" pkg="robot_localization" type="navsat_transform_node" output="screen" >
    <!-- Correction to make IMU read 0 when facing east -->
    <param name="yaw_offset" value="0" />
    <!-- Magnetic Declination for your location - see http://www.ngdc.noaa.gov/geomag-web -->
    <param name="magnetic_declination_radians" value="0.2516183" />
    <!-- Pretend world is flat -->
    <param name="zero_altitude" value="true" />
    <!-- Publish a faster GPS output -->
    <param name="publish_filtered_gps" value="true" />
    <param name="frequency" value="10.0" />
    <!-- Use IMU, not odometry, for yaw -->
    <param name="use_odometry_yaw" value="false" />

    <!-- Subscriptions -->
    <remap from="imu/data" to="imu/data" />
    <remap from="gps/fix" to="/mavros/global_position/raw/fix" />
    <remap from="odometry/filtered" to="odometry/global" />

    <!-- Publications -->
    <remap from="gps/filtered" to="gps/filtered" />
    <remap from="odometry/gps" to="odometry/gps" />
  </node>
  <!-- Run fake localization compatible with AMCL output, Used for debug only -->
  <!--node pkg="fake_localization" type="fake_localization" name="fake_localization" output="screen" /-->

  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(arg basedir)/test.rviz" /-->
</launch>
